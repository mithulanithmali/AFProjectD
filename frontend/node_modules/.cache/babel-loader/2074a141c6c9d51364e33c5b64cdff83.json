{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\AF_ProjectDD\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\AF_ProjectDD\\\\frontend\\\\src\\\\components\\\\Student\\\\FileUpload.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState('Choose File'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filename = _useState4[0],\n        setFilename = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uploadedFile = _useState6[0],\n        setUploadedFile = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        uploadPercentage = _useState10[0],\n        setUploadPercentage = _useState10[1];\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('http://localhost:4000/uploadfile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n      const _res$data = res.data,\n            fileName = _res$data.fileName,\n            filePath = _res$data.filePath;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('problem');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"header mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"big\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Assignment your Upload\")))), React.createElement(\"div\", {\n    className: \"files\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, message ? React.createElement(Message, {\n    msg: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file mb-4 mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, filename)), React.createElement(Progress, {\n    percentage: uploadPercentage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, uploadedFile.fileName), React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))) : null));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\AF_ProjectDD\\frontend\\src\\components\\Student\\FileUpload.jsx"],"names":["React","Fragment","useState","Message","Progress","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","data","fileName","filePath","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React, {Fragment ,useState} from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n    const [file,setFile] = useState('');\r\n    const [filename,setFilename] = useState('Choose File');\r\n    const [uploadedFile , setUploadedFile] = useState({});\r\n    const [message , setMessage ] = useState('');\r\n    const [uploadPercentage ,setUploadPercentage] = useState(0);\r\n\r\n    const onChange = e => {\r\n        setFile(e.target.files[0]);\r\n        setFilename(e.target.files[0].name);\r\n      };\r\n    \r\n      const onSubmit = async e => {\r\n          e.preventDefault();\r\n\r\n          const formData = new FormData();\r\n          formData.append('file' , file);\r\n\r\n          try{\r\n                const res = await axios.post('http://localhost:4000/uploadfile' , formData,{\r\n                \r\n                    headers : {\r\n                        'Content-Type' : 'multipart/form-data'\r\n                    },\r\n                    onUploadProgress: progressEvent => {\r\n                        setUploadPercentage(\r\n                          parseInt(\r\n                            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                          )\r\n                        );\r\n              \r\n                        // Clear percentage\r\n                        setTimeout(() => setUploadPercentage(0), 10000);\r\n                      }\r\n              \r\n                    \r\n                });\r\n\r\n                const { fileName , filePath} = res.data;\r\n                setUploadedFile({ fileName , filePath});\r\n                setMessage('File Uploaded');\r\n\r\n          }catch(err){\r\n            if(err.response.status === 500){\r\n                setMessage('problem');\r\n                \r\n            }else{\r\n                setMessage(err.response.data.msg);\r\n            }\r\n          }\r\n      }\r\n    return (\r\n        <Fragment >\r\n          <p className = \"header mt-2\"><b><center><big>Assignment your Upload</big></center></b></p>\r\n            <div className = \"files\">\r\n              {message ? <Message msg = {message} /> : null}\r\n               \r\n                  <form onSubmit = {onSubmit}>\r\n                  <div className='custom-file mb-4 mt-4'>\r\n                    <input\r\n                      type='file'\r\n                      className='custom-file-input'\r\n                      id='customFile'\r\n                      onChange = {onChange}\r\n                      />\r\n                <label className='custom-file-label' htmlFor='customFile'>\r\n                {filename}\r\n          </label>\r\n        </div>\r\n        \r\n        <Progress percentage={uploadPercentage} />\r\n        <input\r\n          type='submit'\r\n          value='Upload'\r\n          className='btn btn-primary btn-block mt-4'\r\n        />\r\n\r\n        </form>\r\n        { uploadedFile ? <div className = \"row mt-6\">\r\n            <div className = \"col-md-6 m-auto\">\r\n                <h3 className = 'text-center'>{ uploadedFile.fileName}</h3>\r\n                <img style = {{width : '100%'}} src = {uploadedFile.filePath} alt =\"\" />\r\n            </div>\r\n        </div> : null}\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n"]},"metadata":{},"sourceType":"module"}